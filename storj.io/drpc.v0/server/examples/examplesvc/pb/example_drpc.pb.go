// Code generated by protoc-gen-go-drpc. DO NOT EDIT.
// protoc-gen-go-drpc version: v0.0.30
// source: example.proto

package pb

import (
	context "context"
	errors "errors"
	protojson "google.golang.org/protobuf/encoding/protojson"
	proto "google.golang.org/protobuf/proto"
	drpc "storj.io/drpc"
	drpcerr "storj.io/drpc/drpcerr"
)

type drpcEncoding_File_example_proto struct{}

func (drpcEncoding_File_example_proto) Marshal(msg drpc.Message) ([]byte, error) {
	return proto.Marshal(msg.(proto.Message))
}

func (drpcEncoding_File_example_proto) MarshalAppend(buf []byte, msg drpc.Message) ([]byte, error) {
	return proto.MarshalOptions{}.MarshalAppend(buf, msg.(proto.Message))
}

func (drpcEncoding_File_example_proto) Unmarshal(buf []byte, msg drpc.Message) error {
	return proto.Unmarshal(buf, msg.(proto.Message))
}

func (drpcEncoding_File_example_proto) JSONMarshal(msg drpc.Message) ([]byte, error) {
	return protojson.Marshal(msg.(proto.Message))
}

func (drpcEncoding_File_example_proto) JSONUnmarshal(buf []byte, msg drpc.Message) error {
	return protojson.Unmarshal(buf, msg.(proto.Message))
}

type DRPCExampleClient interface {
	DRPCConn() drpc.Conn

	Test(ctx context.Context, in *TestRequest) (*TestResponse, error)
}

type drpcExampleClient struct {
	cc drpc.Conn
}

func NewDRPCExampleClient(cc drpc.Conn) DRPCExampleClient {
	return &drpcExampleClient{cc}
}

func (c *drpcExampleClient) DRPCConn() drpc.Conn { return c.cc }

func (c *drpcExampleClient) Test(ctx context.Context, in *TestRequest) (*TestResponse, error) {
	out := new(TestResponse)
	err := c.cc.Invoke(ctx, "/main.Example/test", drpcEncoding_File_example_proto{}, in, out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type DRPCExampleServer interface {
	Test(context.Context, *TestRequest) (*TestResponse, error)
}

type DRPCExampleUnimplementedServer struct{}

func (s *DRPCExampleUnimplementedServer) Test(context.Context, *TestRequest) (*TestResponse, error) {
	return nil, drpcerr.WithCode(errors.New("Unimplemented"), drpcerr.Unimplemented)
}

type DRPCExampleDescription struct{}

func (DRPCExampleDescription) NumMethods() int { return 1 }

func (DRPCExampleDescription) Method(n int) (string, drpc.Encoding, drpc.Receiver, interface{}, bool) {
	switch n {
	case 0:
		return "/main.Example/test", drpcEncoding_File_example_proto{},
			func(srv interface{}, ctx context.Context, in1, in2 interface{}) (drpc.Message, error) {
				return srv.(DRPCExampleServer).
					Test(
						ctx,
						in1.(*TestRequest),
					)
			}, DRPCExampleServer.Test, true
	default:
		return "", nil, nil, nil, false
	}
}

func DRPCRegisterExample(mux drpc.Mux, impl DRPCExampleServer) error {
	return mux.Register(impl, DRPCExampleDescription{})
}

type DRPCExample_TestStream interface {
	drpc.Stream
	SendAndClose(*TestResponse) error
}

type drpcExample_TestStream struct {
	drpc.Stream
}

func (x *drpcExample_TestStream) SendAndClose(m *TestResponse) error {
	if err := x.MsgSend(m, drpcEncoding_File_example_proto{}); err != nil {
		return err
	}
	return x.CloseSend()
}
